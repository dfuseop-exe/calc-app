{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","expression","setexpression","oldexpression","setoldexpression","prev","setprev","numerics","Set","operators","Button","evaluateExpression","evaluation","eval","putNumerics","value","putDelete","slice","putOperators","HandleKeyUp","event","console","log","key","has","className","tabIndex","onKeyUp","style","width","background","height","display","flexDirection","justifyContent","alignItems","padding","borderRadius","margin","flexWrap","map","Buttonvalue","idx","onClick","color","border","textalign","textdecoration","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w1BAKA,SAASA,MACP,cAAkCC,oDAAS,IAA3C,8LAAKC,WAAL,cAAiBC,cAAjB,cACA,WAAwCF,oDAAS,IAAjD,+LAAKG,cAAL,cAAoBC,iBAApB,cACA,WAAsBJ,oDAAS,OAA/B,+LAAKK,KAAL,cAAWC,QAAX,cACIC,SAAW,IAAIC,IAAI,eACnBC,UAAY,IAAID,IAAI,SACpBE,OAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEzGC,mBAAqB,SAArBA,qBACF,IAAIC,WAAaC,KAAKZ,YACtBC,cAAcU,YACdR,iBAAiBH,YACjBK,QAAQ,QAINQ,YAAc,SAASC,GAEvBb,cADU,QAATG,KACaU,EAEAd,WAAac,GAE7BT,QAAQ,QAGNU,UAAY,WAEF,QAATX,KACDH,cAAc,KAEdA,cAAcD,WAAWgB,MAAM,GAAI,IACnCX,QAAQ,SAIRY,aAAe,SAASH,GACd,OAATV,KAEDH,cAAcD,WAAac,GACX,OAATV,MAEPH,cAAcD,WAAWgB,MAAM,GAAG,GAAKF,GAEzCT,QAAQ,OAKNa,YAAc,SAAUC,GAC1BC,QAAQC,IAAIF,EAAMG,KACA,cAAdH,EAAMG,IACRP,YAEOT,SAASiB,IAAIJ,EAAMG,KAC1BT,YAAYM,EAAMG,KAEXd,UAAUe,IAAIJ,EAAMG,KAC3BL,aAAaE,EAAMG,KAEE,UAAdH,EAAMG,KACbZ,sBAGJ,OACE,mEACEc,UAAU,MACVC,SAAU,EACVC,QAASR,YACTS,MAAO,CACLC,MAAO,OACPC,WAAY,WACZC,OAAQ,SACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAXhB,UAcE,kGACA,mEACEP,MAAO,CACLC,MAAO,QACPC,WAAY,UACZC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfE,WAAY,WACZD,eAAgB,SAChBE,QAAS,OACTC,aAAc,QAVlB,UAcE,0EAAKlC,gBACL,0EAAKF,gBAEP,mEACE2B,MAAO,CACLC,MAAO,QACPS,OAAQ,OACRR,WAAY,UACZC,OAAQ,QACRC,QAAS,OACTC,cAAe,MACfE,WAAY,WACZD,eAAgB,SAChBE,QAAS,OACTC,aAAc,OACdE,SAAU,QAZd,UAeG7B,OAAO8B,KAAI,SAAUC,EAAaC,GACjC,OAAO,qEAAQjB,UAAU,MACzBkB,QAAW,WACW,MAAhBF,EACF9B,qBACyB,MAAhB8B,EACTzB,YACOT,SAASiB,IAAIiB,GACpB3B,YAAY2B,GACLhC,UAAUe,IAAIiB,IACrBvB,aAAauB,IAIjBb,MACE,CACEE,WAAY,UACZc,MAAO,UACPC,OAAQ,OACRhB,MAAO,QACPO,QAAS,OACTU,UAAW,SACXC,eAAgB,OAChBT,OAAS,OACTD,aAAe,OAvBZ,SA0BNI,OAGH,wGAMO1C,2B,gIC5IAiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5D,EAAA,EAAD,MAEF6D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ce55098a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport './App.css';\n\n/*eslint-disable no-eval */\n\nfunction App() {\n  let [expression, setexpression] = useState(\"\");\n  let [oldexpression, setoldexpression] = useState(\"\");\n  let [prev, setprev] = useState(\"ANS\");\n  let numerics = new Set(\"0123456789.\");\n  let operators = new Set(\"+-*/%\");\n  let Button = [\"(\", \")\", \"%\", \"C\", \"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"*\", \"1\", \"2\", \"3\", \"-\", \"0\", \".\", \"=\", \"+\"];\n\n  let evaluateExpression = function () {\n    let evaluation = eval(expression)\n    setexpression(evaluation);\n    setoldexpression(expression);\n    setprev(\"ANS\");\n  }\n\n\n  let putNumerics = function(value){\n    if(prev === \"ANS\"){\n      setexpression(value);\n    }else{\n      setexpression(expression + value);\n    }\n    setprev(\"NUM\");\n  }\n\n  let putDelete = function()\n  {\n    if(prev === \"ANS\"){\n      setexpression(\"\")\n    }else{\n      setexpression(expression.slice(0, -1));\n      setprev(\"DEL\");\n    }\n  }\n\n  let putOperators = function(value){\n    if(prev !== \"OP\")\n    {\n      setexpression(expression + value);\n    }else if(prev === \"OP\")\n    {\n      setexpression(expression.slice(0,-1) + value)\n    }\n    setprev(\"OP\");\n  }\n\n  \n\n  let HandleKeyUp = function (event) {\n    console.log(event.key);\n    if (event.key === \"Backspace\") {\n      putDelete();\n    }\n    else if (numerics.has(event.key)) {\n      putNumerics(event.key);\n    }\n    else if (operators.has(event.key)) {\n      putOperators(event.key);\n    }\n    else if (event.key === \"Enter\") {\n      evaluateExpression();\n    }\n  }\n  return (\n    <div\n      className=\"App\"\n      tabIndex={0}\n      onKeyUp={HandleKeyUp}\n      style={{\n        width: \"100%\",\n        background: \"#FADBD8 \",\n        height: \"1000px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <h1>Calculator In React</h1>\n      <div\n        style={{\n          width: \"320px\",\n          background: \"#ff6347\",\n          height: \"100px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n          borderRadius: \"10px\"\n        }}\n\n      >\n        <h4>{oldexpression}</h4>\n        <h1>{expression}</h1>\n      </div>\n      <div\n        style={{\n          width: \"320px\",\n          margin: \"20px\",\n          background: \"#ff6347\",\n          height: \"420px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"flex-end\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {Button.map(function (Buttonvalue, idx){\n          return <button className=\"btn\"\n          onClick = {function () {\n            if (Buttonvalue === \"=\") {\n              evaluateExpression();\n            } else if (Buttonvalue === \"C\") {\n              putDelete();\n            }else if(numerics.has(Buttonvalue)){\n              putNumerics(Buttonvalue);\n            }else if(operators.has(Buttonvalue)){\n              putOperators(Buttonvalue);\n            }\n            \n          }}\n          style={\n            {\n              background: \"#000000\",\n              color: \"#ffffff\",\n              border: \"none\",\n              width :\"18.5%\",\n              padding: \"25px\",\n              textalign: \"center\",\n              textdecoration: \"none\",\n              margin : \"10px\",\n              borderRadius : \"5px\",\n            }\n          }\n         >{Buttonvalue}</button>\n        })}\n\n        <h3>@Develop By igDfuse</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}